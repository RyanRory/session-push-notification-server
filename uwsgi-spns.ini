[uwsgi]
chdir = /path/to/session-push-notification-server
socket = spns.wsgi
chmod-socket = 666
plugins = python3,logfile
manage-script-name = true
logger = file:logfile=/path/to/session-push-notification-server/spns.log,maxsize=100000000,backupname=/path/to/session-push-notification-server/spns.log.old

# Because requests block while waiting for the hivemind to process the request we run with lots of
# thread workers available that can deal with lots of concurrent pending connections in case the
# hivemind gets momentarily busy handling requests and/or notifications.  (This would be a good use
# for async handling, but uwsgi doesn't currently support that).
enable-threads = true
threads = 16

# This is the main handler for front-end "app" requests:
mount = /=spns.web:app

# Alongside the web front-end interface we run several "mules" that do most of the actual work (the
# web interface is really only there to proxy things to the mule's oxenmq connection).  Think of
# them as closed coupled services that we managed through the same uwsgi process as the app
# frontend for convenience.
#
# In theory there is no reason these have to run as mules under uwsgi: either the main hivemind
# process or one or more notifiers could run as external services.

### Hivemind
# This is the main "hivemind" mule that is the central business component of the PN server.
mule = spns.hivemind:run

### Notifiers
# Apple APNS push notifier; required if you want to support APNS notifications:
mule = spns.notifiers.apns:run
# Google firebase push notification server for Google API android device notifications:
mule = spns.notifiers.firebase:run

# Dummy notifier, normally disabled.  This notifier does nothing aside from logging would-be
# notifications.  Leave disabled when not developing/debugging.
#mule = spns.notifiers.dummy:run
